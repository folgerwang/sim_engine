#version 460
#include "..\..\global_definition.glsl.h"

#extension GL_EXT_ray_tracing : require

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 2, set = 0) uniform CameraProperties 
{
	mat4 view_inverse;
	mat4 proj_inverse;
	vec4 light_pos;
} cam;

layout(location = kPayLoadHitValueIdx) rayPayloadEXT vec3 hit_value;

void main() 
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;

	vec4 origin = cam.view_inverse * vec4(0,0,0,1);
	vec4 target = cam.proj_inverse * vec4(d.x, d.y, 1, 1) ;
	vec4 direction = cam.view_inverse*vec4(normalize(target.xyz / target.w), 0) ;

	uint rayFlags = gl_RayFlagsOpaqueEXT;
	uint cullMask = 0xff;
	float tmin = 0.001;
	float tmax = 10000.0;

	traceRayEXT(
		topLevelAS,
		rayFlags,
		cullMask,
		0,
		0,
		0,
		origin.xyz,
		tmin,
		direction.xyz,
		tmax,
		kPayLoadHitValueIdx);

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hit_value, 0.0));
}
