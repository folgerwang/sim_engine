#version 460
#extension GL_NV_mesh_shader : enable
#include "global_definition.glsl.h"
#include "tile_common.glsl.h"
#include "noise.glsl.h"

out gl_MeshPerVertexNV {
    vec4 gl_Position;
} gl_MeshVerticesNV[];

layout(push_constant) uniform TileUniformBufferObject {
    TileParams tile_params;
};

layout(std430, set = VIEW_PARAMS_SET, binding = VIEW_CAMERA_BUFFER_INDEX) readonly buffer CameraInfoBuffer {
	GameCameraInfo camera_info;
};

layout(set = TILE_PARAMS_SET, binding = ROCK_LAYER_BUFFER_INDEX) uniform sampler2D rock_layer;
layout(set = TILE_PARAMS_SET, binding = SOIL_WATER_LAYER_BUFFER_INDEX) uniform sampler2D soil_water_layer;

layout(local_size_x = 32) in;
layout(triangles, max_vertices=4, max_primitives=2) out;
void main()
{
    uint grass_idx = gl_GlobalInvocationID.x;
    vec4 hash_values = clamp(hash43(vec3(tile_params.min, grass_idx)), 0.0f, 1.0f);

    // tile world position.
    vec2 pos_xz_ws = tile_params.min + hash_values.xy * tile_params.range;

    // convert tile world position to uv coordinate.
    vec2 world_map_uv = (pos_xz_ws - tile_params.world_min) * tile_params.inv_world_range;

    float ground_height = texture(rock_layer, world_map_uv).x;
    vec2 soil_water_thickness = texture(soil_water_layer, world_map_uv).xy * SOIL_WATER_LAYER_MAX_THICKNESS;
    ground_height += soil_water_thickness.x;

    vec3 grass_root_pos = vec3(pos_xz_ws.x, ground_height, pos_xz_ws.y);

    vec3 v0 = grass_root_pos + vec3(-1.0, 0.0, -1.0);
    vec3 v1 = grass_root_pos + vec3(1.0, 0.0, -1.0);
    vec3 v2 = grass_root_pos + vec3(-1.0, 0.0, 1.0);
    vec3 v3 = grass_root_pos + vec3(1.0, 0.0, 1.0);

    gl_MeshVerticesNV[0].gl_Position = camera_info.view_proj * vec4(v0, 1.0); // Upper Left
    gl_MeshVerticesNV[1].gl_Position = camera_info.view_proj * vec4(v1, 1.0); // Upper Right
    gl_MeshVerticesNV[2].gl_Position = camera_info.view_proj * vec4(v2, 1.0); // Bottom Left
    gl_MeshVerticesNV[3].gl_Position = camera_info.view_proj * vec4(v3, 1.0); // Bottom Right
    gl_PrimitiveIndicesNV[0] = 0;
    gl_PrimitiveIndicesNV[1] = 1;
    gl_PrimitiveIndicesNV[2] = 2;
    gl_PrimitiveIndicesNV[3] = 2;
    gl_PrimitiveIndicesNV[4] = 1;
    gl_PrimitiveIndicesNV[5] = 3;
    gl_PrimitiveCountNV += 2;
}
    